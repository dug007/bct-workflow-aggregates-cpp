<?xml version='1.0' encoding='UTF-8' standalone='yes' ?>
<tagfile>
  <compound kind="class">
    <name>Bct::Workflow::Aggregates::AbstractAggregate</name>
    <filename>class_bct_1_1_workflow_1_1_aggregates_1_1_abstract_aggregate.html</filename>
    <member kind="function" virtualness="pure">
      <type>virtual uint32_t</type>
      <name>FieldSetCounter</name>
      <anchorfile>class_bct_1_1_workflow_1_1_aggregates_1_1_abstract_aggregate.html</anchorfile>
      <anchor>a17f8ba25bc36b045023bbfc16cdda058</anchor>
      <arglist>()=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Bct::Workflow::Aggregates::AbstractField</name>
    <filename>class_bct_1_1_workflow_1_1_aggregates_1_1_abstract_field.html</filename>
    <member kind="function" virtualness="pure">
      <type>virtual std::string</type>
      <name>FieldName</name>
      <anchorfile>class_bct_1_1_workflow_1_1_aggregates_1_1_abstract_field.html</anchorfile>
      <anchor>ab7e86ea5d426a75799849e93924a8d19</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual TypeEnum::Type</type>
      <name>Type</name>
      <anchorfile>class_bct_1_1_workflow_1_1_aggregates_1_1_abstract_field.html</anchorfile>
      <anchor>ad60f19a9b1390d2b6442f1571d2ce8ff</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual FieldStateEnum::FieldState</type>
      <name>State</name>
      <anchorfile>class_bct_1_1_workflow_1_1_aggregates_1_1_abstract_field.html</anchorfile>
      <anchor>aa4687584dfb420df99afb3624f459bfd</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual uint32_t</type>
      <name>FieldSetCounter</name>
      <anchorfile>class_bct_1_1_workflow_1_1_aggregates_1_1_abstract_field.html</anchorfile>
      <anchor>a8f9d4ada18b771b3cb48dc069d54aa42</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual std::string</type>
      <name>ComputedValueString</name>
      <anchorfile>class_bct_1_1_workflow_1_1_aggregates_1_1_abstract_field.html</anchorfile>
      <anchor>a47dec73688e4866c89d5cff31f349152</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>ComputedValueString</name>
      <anchorfile>class_bct_1_1_workflow_1_1_aggregates_1_1_abstract_field.html</anchorfile>
      <anchor>a26d83f75de75d6300dbc1469766a0994</anchor>
      <arglist>(const std::string &amp;val)=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>AssessmentRule</name>
    <filename>class_assessment_rule.html</filename>
    <member kind="function">
      <type></type>
      <name>AssessmentRule</name>
      <anchorfile>class_assessment_rule.html</anchorfile>
      <anchor>a244bc0339d239b72512640958679fb86</anchor>
      <arglist>(std::string ruleId, std::string stringId, std::string condition, std::string expression)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>RuleId</name>
      <anchorfile>class_assessment_rule.html</anchorfile>
      <anchor>a7d4ced84744250895419f4b6d578e2c2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>StringId</name>
      <anchorfile>class_assessment_rule.html</anchorfile>
      <anchor>a975f42d131afcbcb924e3353a9d626c1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>Condition</name>
      <anchorfile>class_assessment_rule.html</anchorfile>
      <anchor>a7561a258e13f7f109b4911848d30227e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>Expression</name>
      <anchorfile>class_assessment_rule.html</anchorfile>
      <anchor>aadacecdf6157d89500ec98ad158bc6a3</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Bct::Workflow::Aggregates::BaseAggregate</name>
    <filename>class_bct_1_1_workflow_1_1_aggregates_1_1_base_aggregate.html</filename>
    <base>Bct::Workflow::Aggregates::AbstractAggregate</base>
    <member kind="function">
      <type></type>
      <name>BaseAggregate</name>
      <anchorfile>class_bct_1_1_workflow_1_1_aggregates_1_1_base_aggregate.html</anchorfile>
      <anchor>a4c49e80fc64899b7e19b44247f869b91</anchor>
      <arglist>(const std::string version)</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>getVersion</name>
      <anchorfile>class_bct_1_1_workflow_1_1_aggregates_1_1_base_aggregate.html</anchorfile>
      <anchor>a5af375546466465a8e33e01cc27915fe</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>UpdateCalculatedFields</name>
      <anchorfile>class_bct_1_1_workflow_1_1_aggregates_1_1_base_aggregate.html</anchorfile>
      <anchor>ab66418f34b99152721aa34fb605811fd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SyncCurrentVersion</name>
      <anchorfile>class_bct_1_1_workflow_1_1_aggregates_1_1_base_aggregate.html</anchorfile>
      <anchor>a4a5cb04b4484e86ce802ed8628c0cd63</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>convertVersion</name>
      <anchorfile>class_bct_1_1_workflow_1_1_aggregates_1_1_base_aggregate.html</anchorfile>
      <anchor>acd33dffb8cb1ac0ffc905cc2a03cd45b</anchor>
      <arglist>(std::string version)</arglist>
    </member>
    <member kind="function">
      <type>uint32_t</type>
      <name>FieldSetCounter</name>
      <anchorfile>class_bct_1_1_workflow_1_1_aggregates_1_1_base_aggregate.html</anchorfile>
      <anchor>a2461e0a94382eaf6e1be6964c628c405</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>std::vector&lt; VersionMetaData &gt; &amp;</type>
      <name>AggregateMetaData</name>
      <anchorfile>class_bct_1_1_workflow_1_1_aggregates_1_1_base_aggregate.html</anchorfile>
      <anchor>a6935555a185c342a83a47752466f588f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>std::vector&lt; AbstractField * &gt; &amp;</type>
      <name>FieldList</name>
      <anchorfile>class_bct_1_1_workflow_1_1_aggregates_1_1_base_aggregate.html</anchorfile>
      <anchor>a9ccd688c515af77a556970e3e40b25e6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>int32_t</type>
      <name>Ver</name>
      <anchorfile>class_bct_1_1_workflow_1_1_aggregates_1_1_base_aggregate.html</anchorfile>
      <anchor>a4f1fe1912a66c843b5b73bb3132359c2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>const std::string &amp;</type>
      <name>Version</name>
      <anchorfile>class_bct_1_1_workflow_1_1_aggregates_1_1_base_aggregate.html</anchorfile>
      <anchor>af9921bf2d910c352ac323a404328ebd9</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Bct::Workflow::Aggregates::BaseField</name>
    <filename>class_bct_1_1_workflow_1_1_aggregates_1_1_base_field.html</filename>
    <templarg>T</templarg>
    <base>Bct::Workflow::Aggregates::AbstractField</base>
    <member kind="function">
      <type>void</type>
      <name>Value</name>
      <anchorfile>class_bct_1_1_workflow_1_1_aggregates_1_1_base_field.html</anchorfile>
      <anchor>a790136c00a1ae9e32402884c8a1ec749</anchor>
      <arglist>(const T v)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual FieldStateEnum::FieldState</type>
      <name>State</name>
      <anchorfile>class_bct_1_1_workflow_1_1_aggregates_1_1_base_field.html</anchorfile>
      <anchor>a8ff38d02fb5afda358a247c910464bdd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>FieldName</name>
      <anchorfile>class_bct_1_1_workflow_1_1_aggregates_1_1_base_field.html</anchorfile>
      <anchor>ae288d300fce3b3458f882edac89e19de</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual TypeEnum::Type</type>
      <name>Type</name>
      <anchorfile>class_bct_1_1_workflow_1_1_aggregates_1_1_base_field.html</anchorfile>
      <anchor>acb775e343159579f5be2329ed8c74a24</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual uint32_t</type>
      <name>FieldSetCounter</name>
      <anchorfile>class_bct_1_1_workflow_1_1_aggregates_1_1_base_field.html</anchorfile>
      <anchor>ade440be78e9dac3a0b2d6f2da4b287ba</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual std::string</type>
      <name>ComputedValueString</name>
      <anchorfile>class_bct_1_1_workflow_1_1_aggregates_1_1_base_field.html</anchorfile>
      <anchor>a42e23f14e095a5254580b3a12727a87f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>ComputedValueString</name>
      <anchorfile>class_bct_1_1_workflow_1_1_aggregates_1_1_base_field.html</anchorfile>
      <anchor>a469d9f0095cd809a5e194d765f6bef3f</anchor>
      <arglist>(const std::string &amp;val)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>BaseField&lt; double &gt;</name>
    <filename>class_bct_1_1_workflow_1_1_aggregates_1_1_base_field.html</filename>
    <base>Bct::Workflow::Aggregates::AbstractField</base>
    <member kind="function">
      <type>void</type>
      <name>Value</name>
      <anchorfile>class_bct_1_1_workflow_1_1_aggregates_1_1_base_field.html</anchorfile>
      <anchor>a790136c00a1ae9e32402884c8a1ec749</anchor>
      <arglist>(const double v)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual FieldStateEnum::FieldState</type>
      <name>State</name>
      <anchorfile>class_bct_1_1_workflow_1_1_aggregates_1_1_base_field.html</anchorfile>
      <anchor>a8ff38d02fb5afda358a247c910464bdd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>FieldName</name>
      <anchorfile>class_bct_1_1_workflow_1_1_aggregates_1_1_base_field.html</anchorfile>
      <anchor>ae288d300fce3b3458f882edac89e19de</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual TypeEnum::Type</type>
      <name>Type</name>
      <anchorfile>class_bct_1_1_workflow_1_1_aggregates_1_1_base_field.html</anchorfile>
      <anchor>acb775e343159579f5be2329ed8c74a24</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual uint32_t</type>
      <name>FieldSetCounter</name>
      <anchorfile>class_bct_1_1_workflow_1_1_aggregates_1_1_base_field.html</anchorfile>
      <anchor>ade440be78e9dac3a0b2d6f2da4b287ba</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual std::string</type>
      <name>ComputedValueString</name>
      <anchorfile>class_bct_1_1_workflow_1_1_aggregates_1_1_base_field.html</anchorfile>
      <anchor>a42e23f14e095a5254580b3a12727a87f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>ComputedValueString</name>
      <anchorfile>class_bct_1_1_workflow_1_1_aggregates_1_1_base_field.html</anchorfile>
      <anchor>a469d9f0095cd809a5e194d765f6bef3f</anchor>
      <arglist>(const std::string &amp;val)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>BaseField&lt; int32_t &gt;</name>
    <filename>class_bct_1_1_workflow_1_1_aggregates_1_1_base_field.html</filename>
    <base>Bct::Workflow::Aggregates::AbstractField</base>
    <member kind="function">
      <type>void</type>
      <name>Value</name>
      <anchorfile>class_bct_1_1_workflow_1_1_aggregates_1_1_base_field.html</anchorfile>
      <anchor>a790136c00a1ae9e32402884c8a1ec749</anchor>
      <arglist>(const int32_t v)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual FieldStateEnum::FieldState</type>
      <name>State</name>
      <anchorfile>class_bct_1_1_workflow_1_1_aggregates_1_1_base_field.html</anchorfile>
      <anchor>a8ff38d02fb5afda358a247c910464bdd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>FieldName</name>
      <anchorfile>class_bct_1_1_workflow_1_1_aggregates_1_1_base_field.html</anchorfile>
      <anchor>ae288d300fce3b3458f882edac89e19de</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual TypeEnum::Type</type>
      <name>Type</name>
      <anchorfile>class_bct_1_1_workflow_1_1_aggregates_1_1_base_field.html</anchorfile>
      <anchor>acb775e343159579f5be2329ed8c74a24</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual uint32_t</type>
      <name>FieldSetCounter</name>
      <anchorfile>class_bct_1_1_workflow_1_1_aggregates_1_1_base_field.html</anchorfile>
      <anchor>ade440be78e9dac3a0b2d6f2da4b287ba</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual std::string</type>
      <name>ComputedValueString</name>
      <anchorfile>class_bct_1_1_workflow_1_1_aggregates_1_1_base_field.html</anchorfile>
      <anchor>a42e23f14e095a5254580b3a12727a87f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>ComputedValueString</name>
      <anchorfile>class_bct_1_1_workflow_1_1_aggregates_1_1_base_field.html</anchorfile>
      <anchor>a469d9f0095cd809a5e194d765f6bef3f</anchor>
      <arglist>(const std::string &amp;val)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Bct::Workflow::Aggregates::ComputeRule</name>
    <filename>class_bct_1_1_workflow_1_1_aggregates_1_1_compute_rule.html</filename>
  </compound>
  <compound kind="class">
    <name>Bct::Workflow::Aggregates::FieldDouble</name>
    <filename>class_bct_1_1_workflow_1_1_aggregates_1_1_field_double.html</filename>
    <base>BaseField&lt; double &gt;</base>
  </compound>
  <compound kind="class">
    <name>Bct::Workflow::Aggregates::FieldDoubleRo</name>
    <filename>class_bct_1_1_workflow_1_1_aggregates_1_1_field_double_ro.html</filename>
    <base>Bct::Workflow::Aggregates::FieldDouble</base>
  </compound>
  <compound kind="class">
    <name>Bct::Workflow::Aggregates::FieldInt32</name>
    <filename>class_bct_1_1_workflow_1_1_aggregates_1_1_field_int32.html</filename>
    <base>BaseField&lt; int32_t &gt;</base>
  </compound>
  <compound kind="class">
    <name>Bct::Workflow::Aggregates::FieldInt32Ro</name>
    <filename>class_bct_1_1_workflow_1_1_aggregates_1_1_field_int32_ro.html</filename>
    <base>Bct::Workflow::Aggregates::FieldInt32</base>
  </compound>
  <compound kind="class">
    <name>Bct::Workflow::Aggregates::FieldMeta</name>
    <filename>class_bct_1_1_workflow_1_1_aggregates_1_1_field_meta.html</filename>
  </compound>
  <compound kind="class">
    <name>Bct::Workflow::Aggregates::NoSuchVersion</name>
    <filename>class_bct_1_1_workflow_1_1_aggregates_1_1_no_such_version.html</filename>
    <member kind="function">
      <type></type>
      <name>NoSuchVersion</name>
      <anchorfile>class_bct_1_1_workflow_1_1_aggregates_1_1_no_such_version.html</anchorfile>
      <anchor>a21ae9d15c17580a1ca544771f2542cb8</anchor>
      <arglist>(const std::string &amp;aggregateName, const std::string &amp;requestedVersion)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~NoSuchVersion</name>
      <anchorfile>class_bct_1_1_workflow_1_1_aggregates_1_1_no_such_version.html</anchorfile>
      <anchor>a86e16387662774aeade95621edb9db5b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>what</name>
      <anchorfile>class_bct_1_1_workflow_1_1_aggregates_1_1_no_such_version.html</anchorfile>
      <anchor>a53d8f94bb2c96a74ab88ca974e6ebceb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>aggregateName</name>
      <anchorfile>class_bct_1_1_workflow_1_1_aggregates_1_1_no_such_version.html</anchorfile>
      <anchor>a52a9967646b41e4b21e1d9e205e88695</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>requestedVersion</name>
      <anchorfile>class_bct_1_1_workflow_1_1_aggregates_1_1_no_such_version.html</anchorfile>
      <anchor>ad0fb6c24132bb1fa49fb1573cb251982</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Bct::Workflow::Aggregates::VersionChangeRule</name>
    <filename>class_bct_1_1_workflow_1_1_aggregates_1_1_version_change_rule.html</filename>
    <member kind="function">
      <type></type>
      <name>VersionChangeRule</name>
      <anchorfile>class_bct_1_1_workflow_1_1_aggregates_1_1_version_change_rule.html</anchorfile>
      <anchor>aad1317a377abf250e422bb962da1fee4</anchor>
      <arglist>(std::string field, std::string fromMinor, std::string toMinor, std::string expression)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Bct::Workflow::Aggregates::VersionInfo</name>
    <filename>class_bct_1_1_workflow_1_1_aggregates_1_1_version_info.html</filename>
  </compound>
  <compound kind="struct">
    <name>Bct::Workflow::Aggregates::VersionMetaData</name>
    <filename>struct_bct_1_1_workflow_1_1_aggregates_1_1_version_meta_data.html</filename>
  </compound>
</tagfile>
